AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  MovierBack

  Sample SAM Template for MovierBack

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
  MovieApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MovieApi
      StageName: Prod

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  CreateMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_movie/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        CreateMovie:
          Type: Api
          Properties:
            Path: /create
            RestApiId: !Ref MovieApi
            Method: post
  GetMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_movies/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        CreateMovie:
          Type: Api
          Properties:
            Path: /getAll
            RestApiId: !Ref MovieApi
            Method: get
  DisableMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: disable_movie/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        CreateMovie:
          Type: Api
          Properties:
            Path: /disable/{id}
            RestApiId: !Ref MovieApi
            Method: put
  EnableMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: enable_movie/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        CreateMovie:
          Type: Api
          Properties:
            Path: /enable/{id}
            RestApiId: !Ref MovieApi
            Method: put
  UpdateMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_movie/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Events:
        UpdateMovie:
          Type: Api
          Properties:
            Path: /update/{id}
            RestApiId: !Ref MovieApi
            Method: put

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${MovieApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn

  CreateMovieApi:
    Description: "API Gateway endpoint URL for Prod stage for create movie function"
    Value: !Sub "https://${MovieApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create"
  CreateMovieFunction:
    Description: "Create Movie Lambda Function ARN"
    Value: !GetAtt CreateMovieFunction.Arn

  GetMovieApi:
    Description: "API Gateway endpoint URL for Prod stage for create movie function"
    Value: !Sub "https://${MovieApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/getAll"
  GetMovieFunction:
    Description: "Get Movie Lambda Function ARN"
    Value: !GetAtt GetMovieFunction.Arn

  DisableMovieApi:
    Description: "API Gateway endpoint URL for Prod stage for create movie function"
    Value: !Sub "https://${MovieApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/disable/{id}"
  DisableMovieFunction:
    Description: "Get Movie Lambda Function ARN"
    Value: !GetAtt DisableMovieFunction.Arn

  EnableMovieApi:
    Description: "API Gateway endpoint URL for Prod stage for create movie function"
    Value: !Sub "https://${MovieApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/enable/{id}"
  EnableMovieFunction:
    Description: "Get Movie Lambda Function ARN"
    Value: !GetAtt EnableMovieFunction.Arn

  UpdateMovieApi:
    Description: "API Gateway endpoint URL for Prod stage for update movie function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update/{id}"
  UpdateMovieFunction:
    Description: "Update Movie Lambda Function ARN"
    Value: !GetAtt UpdateMovieFunction.Arn

  LambdaExecutionRole:
    Description: "Implicit IAM Role created for lambdas functions"
    Value: !GetAtt LambdaExecutionRole.Arn
